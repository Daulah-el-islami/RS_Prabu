/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Transaksi;

import Koneksi.Koneksi;
import MainMenu.F_Menu;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Daulah
 */
public class F_RawatInap extends javax.swing.JFrame {

    private final DefaultTableModel tabel;
    Boolean fungsi_simpan = false, fungsi_ubah = false;
    private Statement stm;
    public Statement stt;
    java.text.SimpleDateFormat kal = new java.text.SimpleDateFormat("yyyy-MM-dd");
    private TableColumn column;
    String temp_kd_inap = "", masuk, keluar;
    public StringTokenizer token;
    public String ganti = "";
    public long angka;

    /**
     * Creates new form F_RawatInap
     */
    public F_RawatInap() {
        initComponents();
        String[] judul = {"KODE RAWAT INAP", "KODE RUANGAN", "NAMA RUANGAN", "BIAYA", "KODE DOKTER", "NAMA DOKTER", "SPESIALIS", "BIAYA DOKTER", "KODE PASIEN", "NAMA PASIEN", "KODE PERAWAT", "NAMA PERAWAT", "TANGGAL MASUK", "TANGGAL KELUAR", "LAMA MENGINAP", "TOTAL BIAYA"};
        tabel = new DefaultTableModel(judul, 0);
        jTable1.setModel(tabel);
        tampilkan_data();
        setLocationRelativeTo(this);
        this.setResizable(false);
        aktif(false);
        setTombol(true);
        aturKolom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        e_kdpasien = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        e_kdperawat = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        cari_kdperawat = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        batal = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        e_spesialis = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        e_namadokter = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        hitung = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        e_biaya = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        e_tanggalmasuk = new com.toedter.calendar.JDateChooser();
        close = new javax.swing.JButton();
        e_namapasien = new javax.swing.JTextField();
        hapus = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        cari = new javax.swing.JButton();
        e_namaperawat = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        e_kdrawatinap = new javax.swing.JTextField();
        totall = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        e_tanggalkeluar = new com.toedter.calendar.JDateChooser();
        e_kddokter = new javax.swing.JTextField();
        cari_pasien = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        cari_kdruangan = new javax.swing.JButton();
        e_biayadokter = new javax.swing.JTextField();
        lama = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        e_kdruangan = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pencarian = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tambah = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        e_namaruangan = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        e_kdpasien.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_kdpasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_kdpasien.setMargin(new java.awt.Insets(0, 3, 0, 3));
        e_kdpasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_kdpasienActionPerformed(evt);
            }
        });
        getContentPane().add(e_kdpasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 130, 30));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText(":");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 10, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Kode Dokter");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText(":");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText(":");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));

        e_kdperawat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_kdperawat.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_kdperawat.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_kdperawat, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 220, 130, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Tanggal Keluar");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, -1, -1));

        cari_kdperawat.setText("CARI");
        cari_kdperawat.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cari_kdperawat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cari_kdperawat.setMargin(new java.awt.Insets(2, 0, 2, 0));
        cari_kdperawat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_kdperawatActionPerformed(evt);
            }
        });
        getContentPane().add(cari_kdperawat, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 220, 80, 30));

        edit.setText("Ubah");
        edit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        edit.setEnabled(false);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 87, 37));

        simpan.setText("Simpan");
        simpan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        simpan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        simpan.setEnabled(false);
        simpan.setIconTextGap(1);
        simpan.setMargin(new java.awt.Insets(2, 0, 2, 0));
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, 87, 37));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("Total Biaya");
        getContentPane().add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, -1, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("Biaya");
        getContentPane().add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, -1, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText(":");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 270, 10, -1));

        batal.setText("Batal");
        batal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        batal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        batal.setMargin(new java.awt.Insets(2, 0, 2, 0));
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });
        getContentPane().add(batal, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 390, 87, 37));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Tanggal Masuk");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText(":");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, -1, -1));

        e_spesialis.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_spesialis.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_spesialis.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_spesialis, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 220, 30));

        jScrollPane2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(17);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 1010, 120));

        e_namadokter.setEditable(false);
        e_namadokter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_namadokter.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_namadokter.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_namadokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 220, 30));

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText(":");
        getContentPane().add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 10, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Kode Ruangan");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText(":");
        getContentPane().add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 140, 10, -1));

        refresh.setText("BERSIHKAN");
        refresh.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 390, 87, 37));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText(":");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, -1, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText(":");
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, -1, -1));

        hitung.setText("HITUNG");
        hitung.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        hitung.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitungActionPerformed(evt);
            }
        });
        getContentPane().add(hitung, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 180, 87, 37));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText(":");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, -1, -1));

        e_biaya.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_biaya.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_biaya.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_biaya, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 220, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText(":");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, -1, -1));

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setText(":");
        getContentPane().add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 100, 10, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Nama Perawat");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, -1, -1));

        e_tanggalmasuk.setDateFormatString("dd MMMM  yyyy");
        e_tanggalmasuk.setEnabled(false);
        e_tanggalmasuk.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                e_tanggalmasukPropertyChange(evt);
            }
        });
        getContentPane().add(e_tanggalmasuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 300, 240, 30));

        close.setText("Kembali");
        close.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, 87, 37));

        e_namapasien.setEditable(false);
        e_namapasien.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_namapasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_namapasien.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_namapasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 220, 30));

        hapus.setText("Hapus");
        hapus.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hapus.setEnabled(false);
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, 87, 37));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setText("Spesialis");
        getContentPane().add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText("Lama Menginap");
        getContentPane().add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 100, -1, -1));

        cari.setText("Cari");
        cari.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cari.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        getContentPane().add(cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 390, 87, 30));

        e_namaperawat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_namaperawat.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_namaperawat.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_namaperawat, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, 220, 30));

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText(":");
        getContentPane().add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 10, -1));

        e_kdrawatinap.setEditable(false);
        e_kdrawatinap.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_kdrawatinap.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_kdrawatinap.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        e_kdrawatinap.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_kdrawatinap, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 200, 30));

        totall.setEditable(false);
        totall.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        totall.setText("0 ");
        totall.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        totall.setMargin(new java.awt.Insets(0, 3, 0, 3));
        totall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totallActionPerformed(evt);
            }
        });
        getContentPane().add(totall, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 140, 130, 30));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Kode Pasien");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        e_tanggalkeluar.setDateFormatString("dd MMMM  yyyy");
        e_tanggalkeluar.setEnabled(false);
        e_tanggalkeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e_tanggalkeluarMouseClicked(evt);
            }
        });
        e_tanggalkeluar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                e_tanggalkeluarPropertyChange(evt);
            }
        });
        getContentPane().add(e_tanggalkeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, 240, 30));

        e_kddokter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_kddokter.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_kddokter.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        e_kddokter.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_kddokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 220, 30));

        cari_pasien.setText("CARI");
        cari_pasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cari_pasien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cari_pasien.setMargin(new java.awt.Insets(2, 0, 2, 0));
        cari_pasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_pasienActionPerformed(evt);
            }
        });
        getContentPane().add(cari_pasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 80, 30));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setText("Biaya Dokter");
        getContentPane().add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        cari_kdruangan.setText("CARI");
        cari_kdruangan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cari_kdruangan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cari_kdruangan.setMargin(new java.awt.Insets(2, 0, 2, 0));
        cari_kdruangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_kdruanganActionPerformed(evt);
            }
        });
        getContentPane().add(cari_kdruangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 100, 80, 30));

        e_biayadokter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_biayadokter.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_biayadokter.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_biayadokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 220, 30));

        lama.setEditable(false);
        lama.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lama.setText("0");
        lama.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        lama.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(lama, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, 50, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Nama Dokter");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText(":");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 10, -1));

        e_kdruangan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_kdruangan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_kdruangan.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_kdruangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 130, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Kode Rawat Inap");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        pencarian.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pencarian.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        pencarian.setMargin(new java.awt.Insets(0, 3, 0, 3));
        pencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pencarianActionPerformed(evt);
            }
        });
        getContentPane().add(pencarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 390, 190, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText(":");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, -1, -1));

        tambah.setText("Tambah");
        tambah.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tambah.setBorderPainted(false);
        tambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tambah.setIconTextGap(2);
        tambah.setMargin(new java.awt.Insets(2, 0, 2, 0));
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 87, 37));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Nama Ruangan");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("RAWAT INAP");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 40));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Kode Perawat");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Nama Pasien");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText(":");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 310, -1, -1));

        e_namaruangan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        e_namaruangan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        e_namaruangan.setMargin(new java.awt.Insets(0, 3, 0, 3));
        getContentPane().add(e_namaruangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 220, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Form Master 2.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void e_kdpasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_kdpasienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_kdpasienActionPerformed

    private void cari_kdperawatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_kdperawatActionPerformed
        String kode_perawat = e_kdperawat.getText();
        try {
            Connection koneksi = Koneksi.getKoneksi();
            Statement statement = (Statement) koneksi.createStatement();
            String sql = "SELECT * FROM perawat WHERE kd_perawat like '" + kode_perawat + "'";
            ResultSet rs = statement.executeQuery(sql);
            if (rs.next()) {
                aktif(true);
                setTombol(false);
                e_namaperawat.setText(rs.getString(2));

                JOptionPane.showMessageDialog(null, "Data ditemukan", "Insert Data", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan ", "Insert Data", JOptionPane.INFORMATION_MESSAGE);
            }
            statement.close();
            koneksi.close();
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Eror:" + e, "Gagal", JOptionPane.WARNING_MESSAGE);
            System.err.println("Exception: "+e.getMessage());
        }
    }//GEN-LAST:event_cari_kdperawatActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        String user_id = e_kdrawatinap.getText();
        String kode_dokter = e_kddokter.getText();
        String nama_dokter = e_namadokter.getText();
        String sp = e_spesialis.getText();
        String bi = e_biayadokter.getText();
        String kode_pasien = e_kdpasien.getText();
        String nama_pasien = e_namapasien.getText();
        String tanggal_masuk = String.valueOf(kal.format(e_tanggalmasuk.getDate()));
        String tanggal_keluar = String.valueOf(kal.format(e_tanggalkeluar.getDate()));
        String nama_ruangan = e_namaruangan.getText();
        String kode_ruangan = e_kdruangan.getText();
        String biaya = e_biaya.getText();
        String lamameng = lama.getText();
        String tot = totall.getText();

        Connection koneksi = null;
        Statement statement = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
            koneksi = DriverManager.getConnection("jdbc:mysql://localhost/db_rsprabu", "root", "");

            statement = koneksi.createStatement();
            String sql = "UPDATE rawat_inap SET kd_dokter='" + kode_dokter + "', nama_dokter='" + nama_dokter + "', spesialis='" + sp + "', biaya_dokter='" + bi + "', kd_pasien='" + kode_pasien + "', nama_pasien='" + nama_pasien + "', kd_ruangan='" + kode_ruangan + "', nama_ruangan='" + nama_ruangan + "', biaya='" + biaya + "', tgl_inap='" + tanggal_masuk + "', tgl_keluar='" + tanggal_keluar + "', lama_menginap='" + lamameng + "', total_biaya='" + tot + "' WHERE kd_inap LIKE '" + user_id + "'";

            statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Data berhasil di UPDATE..", "Insert Data", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Eror: " + e, "Gagal", JOptionPane.WARNING_MESSAGE);
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if (statement != null) {
                    statement.close();
                }
                if (koneksi != null) {
                    koneksi.close();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Terjadi Kesalahan Menutup Sumber Daya! " + ex.getMessage(), "Gagal", JOptionPane.WARNING_MESSAGE);
                System.err.println("Exception: " + ex.getMessage());
            }
            tampilkan_data();
        }
    }//GEN-LAST:event_editActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        String user_id = e_kdrawatinap.getText();
        String nama_ruangan = e_namaruangan.getText();
        String biaya = e_biaya.getText();
        String kode_dokter = e_kddokter.getText();
        String nama_dokter = e_namadokter.getText();
        String kode_pasien = e_kdpasien.getText();
        String sp = e_spesialis.getText();
        String bi = e_biayadokter.getText();
        String nama_pasien = e_namapasien.getText();
        String kode_perawat = e_kdperawat.getText();
        String nama_perawat = e_namaperawat.getText();
        String kode_ruangan = e_kdruangan.getText();
        String tanggal_masuk = String.valueOf(kal.format(e_tanggalmasuk.getDate()));
        String lamameng = lama.getText();
        String tot = totall.getText();
        {
            try {
                Connection koneksi = Koneksi.getKoneksi();
                Statement statement = (Statement) koneksi.createStatement();
                String sql = "insert into rawat_inap values('" + user_id + "','" + kode_ruangan + "','" + nama_ruangan + "','" + biaya + "','" + kode_dokter + "','" + nama_dokter + "','" + sp + "','" + bi + "','" + kode_pasien + "','" + nama_pasien + "','" + kode_perawat + "','" + nama_perawat + "','" + tanggal_masuk + "',CURDATE(),'" + lamameng + "','" + tot + "')";
                int executeUpdate = statement.executeUpdate(sql);
                statement.close();
                JOptionPane.showMessageDialog(null, "Data berhasil dimasukkan..", "Insert Data", JOptionPane.INFORMATION_MESSAGE);
                aktif(true);
                e_kdrawatinap.setText("");

                e_kddokter.setText("");
                e_namadokter.setText("");
                e_kdpasien.setText("");
                e_namapasien.setText("");
                e_kdruangan.setText("");
                e_namaruangan.setText("");
                e_kdperawat.setText("");
                e_namaperawat.setText("");
                e_tanggalmasuk.setDate(null);
                e_tanggalkeluar.setDate(null);
                koneksi.close();
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, "Eror: " + e, "Gagal", JOptionPane.WARNING_MESSAGE);
                System.err.println("Exception: "+e.getMessage());
            } finally {
                tampilkan_data();
            }
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        e_kdrawatinap.setText("");
        e_kddokter.setText("");
        e_namadokter.setText("");
        e_spesialis.setText("");
        e_biayadokter.setText("");
        e_kdpasien.setText("");
        e_namapasien.setText("");
        e_kdruangan.setText("");
        e_namaruangan.setText("");
        e_kdperawat.setText("");
        e_namaperawat.setText("");
        aktif(false);
        setTombol(true);
    }//GEN-LAST:event_batalActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        e_kdrawatinap.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        e_kdruangan.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        e_namaruangan.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        e_biaya.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        e_kddokter.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        e_namadokter.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        e_spesialis.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        e_biayadokter.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
        e_kdpasien.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString());
        e_namapasien.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 9).toString());
        e_kdperawat.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 10).toString());
        e_namaperawat.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 11).toString());

        java.util.Date tgl_lhr = null;
        java.util.Date tgl_lhr_2 = null;
        try {
            tgl_lhr = new SimpleDateFormat("yyyy-MM-dd").parse(tabel.getValueAt(jTable1.getSelectedRow(), 12).toString());

        } catch (ParseException ex) {
            System.out.println(ex);
        }
        e_tanggalmasuk.setDate(tgl_lhr);

        try {
            tgl_lhr_2 = new SimpleDateFormat("yyyy-MM-dd").parse(tabel.getValueAt(jTable1.getSelectedRow(), 13).toString());

        } catch (ParseException ex) {
            System.out.println(ex);
        }
        e_tanggalkeluar.setDate(tgl_lhr_2);
        lama.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 14).toString());
        totall.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 15).toString());

        temp_kd_inap = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();

        aktif2(true);
        tambah.setEnabled(false);
        hapus.setEnabled(true);
        edit.setEnabled(true);
        simpan.setEnabled(false);
    }//GEN-LAST:event_jTable1MouseClicked

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        tampilkan_data();
        if (fungsi_simpan == true && fungsi_ubah == false) {
            empty_field();
        } else if (fungsi_ubah == true && fungsi_simpan == false) {

        } else {
            empty_field();
        }
        disable_field();
        e_biaya.setText("");
        e_kdperawat.setText("");
        e_namaperawat.setText("");
        tambah.setEnabled(true);
        edit.setEnabled(false);
        hapus.setEnabled(false);
        simpan.setEnabled(false);
        fungsi_simpan = false;
        fungsi_ubah = false;
    }//GEN-LAST:event_refreshActionPerformed

    private void hitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitungActionPerformed
        try {
            DateFormat format = new SimpleDateFormat("dd MMMM yyyy");
            Date tanggalmasuk = format.parse(masuk);
            Date tanggalkeluar = format.parse(keluar);
            long tanggalmasuk1 = tanggalmasuk.getTime();
            long tanggalkeluar1 = tanggalkeluar.getTime();
            long diff = tanggalkeluar1 - tanggalmasuk1;
            long lamaa = diff / (24 * 60 * 60 * 1000);
            lama.setText(Long.toString(lamaa) + "");

            int dokter, ruangan, lamamenginap, b, total;
            String Hasil;
            dokter = Integer.valueOf(e_biayadokter.getText());
            ruangan = Integer.valueOf(e_biaya.getText());
            lamamenginap = Integer.valueOf(lama.getText());
            if (lamamenginap <= 0) {
                total = dokter + (ruangan * 1);
                Hasil = String.valueOf(total);
                totall.setText(Hasil);
                lama.setText("1");
            } else {
                total = dokter + (ruangan * lamamenginap);
                Hasil = String.valueOf(total);
                totall.setText(Hasil);
            }

            angka = Integer.parseInt(totall.getText());
            ganti = NumberFormat.getNumberInstance(Locale.US).format(angka);
            token = new StringTokenizer(ganti, ".");
            ganti = token.nextToken();
            ganti = ganti.replace(',', '.');
            totall.setText("Rp. " + String.format(ganti));
        } catch (Exception e) {
            System.out.println("" + e.getMessage());
        }
    }//GEN-LAST:event_hitungActionPerformed

    private void e_tanggalmasukPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_e_tanggalmasukPropertyChange
        if (e_tanggalmasuk.getDate() != null) {
            SimpleDateFormat FormatTanggal = new SimpleDateFormat("dd MMMM yyyy");
            masuk = FormatTanggal.format(e_tanggalmasuk.getDate());
        }
    }//GEN-LAST:event_e_tanggalmasukPropertyChange

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        F_Menu fb = new F_Menu();
        fb.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_closeActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        if (e_kdrawatinap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pilih Data Terlebih Dahulu!");
        } else {
            int reply = JOptionPane.showConfirmDialog(this, "Hapus Data Rawat Inap?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (reply == JOptionPane.YES_OPTION) {
                Connection koneksi = null;
                Statement stt = null;

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
                    koneksi = DriverManager.getConnection("jdbc:mysql://localhost/db_rsprabu", "root", "");

                    stt = koneksi.createStatement();
                    String sql = "DELETE FROM rawat_inap WHERE kd_inap='" + e_kdrawatinap.getText() + "'";

                    stt.executeUpdate(sql);
                    JOptionPane.showMessageDialog(this, "Data Dihapus!");

                    tampilkan_data();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Data Gagal Dihapus! " + ex.getMessage());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                    JOptionPane.showMessageDialog(this, "Terjadi Kesalahan! " + ex.getMessage());
                } finally {
                    try {
                        if (stt != null) {
                            stt.close();
                        }
                        if (koneksi != null) {
                            koneksi.close();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Menutup Sumber Daya! " + ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_hapusActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        fungsi_pencarian();
        pencarian.requestFocus();
    }//GEN-LAST:event_cariActionPerformed

    private void totallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totallActionPerformed

    private void e_tanggalkeluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e_tanggalkeluarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_e_tanggalkeluarMouseClicked

    private void e_tanggalkeluarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_e_tanggalkeluarPropertyChange
        if (e_tanggalkeluar.getDate() != null) {
            SimpleDateFormat FormatTanggal = new SimpleDateFormat("dd MMMM yyyy");
            keluar = FormatTanggal.format(e_tanggalkeluar.getDate());
        }
    }//GEN-LAST:event_e_tanggalkeluarPropertyChange

    private void cari_pasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_pasienActionPerformed
        String kode_pasien = e_kdpasien.getText();
        String kode_dokter = e_kddokter.getText();
        try {
            Connection koneksi = Koneksi.getKoneksi();
            Statement statement = (Statement) koneksi.createStatement();

            String sql = "SELECT i.kd_pasien, i.nama_pasien, i.kd_dokter, i.nama_dokter, a.spesialis, a.harga, i.hasil, a.harga FROM pemeriksaan AS i INNER JOIN dokter AS a ON i.kd_dokter = a.kd_dokter WHERE i.kd_pasien = '" + kode_pasien + "' && i.hasil = 'Rawat Inap' ORDER BY i.kd_pasien ;";

            ResultSet rs = statement.executeQuery(sql);

            if (rs.next()) {

                e_namapasien.setText(rs.getString("nama_pasien"));
                e_kddokter.setText(rs.getString("kd_dokter"));
                e_namadokter.setText(rs.getString("nama_dokter"));
                e_spesialis.setText(rs.getString("spesialis"));
                e_biayadokter.setText(rs.getString("harga"));

                JOptionPane.showMessageDialog(null, "Data ditemukan", "Insert Data", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan Atau Data Tersebut Bukan Termasuk Rawat Inap ", "Insert Data", JOptionPane.INFORMATION_MESSAGE);
            }
            statement.close();

            koneksi.close();
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Eror:" + e, "Gagal", JOptionPane.WARNING_MESSAGE);
            System.err.println("Exception: " + e.getMessage());
        }

    }//GEN-LAST:event_cari_pasienActionPerformed

    private void cari_kdruanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_kdruanganActionPerformed
        String kode_ruangan = e_kdruangan.getText();
        try {
            Connection koneksi = Koneksi.getKoneksi();
            Statement statement = (Statement) koneksi.createStatement();
            String sql = "SELECT * FROM ruangan WHERE kd_ruangan like '" + kode_ruangan + "'";
            ResultSet rs = statement.executeQuery(sql);
            if (rs.next()) {
                aktif(true);
                setTombol(false);
                e_namaruangan.setText(rs.getString(2));
                e_biaya.setText(rs.getString(3));

                JOptionPane.showMessageDialog(null, "Data ditemukan", "Insert Data", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan ", "Insert Data", JOptionPane.INFORMATION_MESSAGE);
            }
            statement.close();
            koneksi.close();
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Eror:" + e, "Gagal", JOptionPane.WARNING_MESSAGE);
            System.err.println("Exception: " + e.getMessage());
        }
    }//GEN-LAST:event_cari_kdruanganActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        aktif(true);
        setTombol(false);
        penomoran_otomatis();
    }//GEN-LAST:event_tambahActionPerformed

    private void pencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pencarianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pencarianActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for (double i = 0.0; i <= 1.0; i = i + 0.1) {
            String val = i + "";
            float f = Float.valueOf(val);
            this.setOpacity(f);
            try {
                Thread.sleep(30);
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_RawatInap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_RawatInap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_RawatInap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_RawatInap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_RawatInap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batal;
    private javax.swing.JButton cari;
    private javax.swing.JButton cari_kdperawat;
    private javax.swing.JButton cari_kdruangan;
    private javax.swing.JButton cari_pasien;
    private javax.swing.JButton close;
    private javax.swing.JTextField e_biaya;
    private javax.swing.JTextField e_biayadokter;
    private javax.swing.JTextField e_kddokter;
    private javax.swing.JTextField e_kdpasien;
    private javax.swing.JTextField e_kdperawat;
    private javax.swing.JTextField e_kdrawatinap;
    private javax.swing.JTextField e_kdruangan;
    private javax.swing.JTextField e_namadokter;
    private javax.swing.JTextField e_namapasien;
    private javax.swing.JTextField e_namaperawat;
    private javax.swing.JTextField e_namaruangan;
    private javax.swing.JTextField e_spesialis;
    private com.toedter.calendar.JDateChooser e_tanggalkeluar;
    private com.toedter.calendar.JDateChooser e_tanggalmasuk;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JButton hitung;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lama;
    private javax.swing.JTextField pencarian;
    private javax.swing.JButton refresh;
    private javax.swing.JButton simpan;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField totall;
    // End of variables declaration//GEN-END:variables

    private void empty_field() {
        e_kdrawatinap.setText(null);
        e_kddokter.setText(null);
        e_namadokter.setText(null);
        e_spesialis.setText(null);
        e_biayadokter.setText(null);
        e_kdpasien.setText(null);
        e_namapasien.setText(null);
        e_kdruangan.setText(null);
        e_tanggalmasuk.setDate(null);
        e_tanggalkeluar.setDate(null);
        e_namaruangan.setText(null);
        lama.setText("0");
        totall.setText("0");
        pencarian.setText(null);
    }

    private void enable_field() {
        e_kdrawatinap.setEditable(true);
        e_kddokter.setEditable(true);
        e_kdpasien.setEditable(true);
    }

    private void disable_field() {
        e_kdrawatinap.setEditable(false);
        e_kddokter.setEditable(false);
        e_kdpasien.setEditable(false);
    }

    private void tampilkan_data() {
        try {
            int rowCount = jTable1.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                tabel.removeRow(0);
            }

            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
            Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost/db_rsprabu", "root", "");

            Statement stmt = koneksi.createStatement();
            ResultSet re = stmt.executeQuery("SELECT * FROM rawat_inap ORDER BY kd_inap");
            while (re.next()) {
                String[] tabel_master = {
                    re.getString(1), re.getString(2), re.getString(3), re.getString(4),
                    re.getString(5), re.getString(6), re.getString(7), re.getString(8),
                    re.getString(9), re.getString(10), re.getString(11), re.getString(12),
                    re.getString(13), re.getString(14), re.getString(15), re.getString(16)
                };
                tabel.addRow(tabel_master);
            }

            re.close();
            stmt.close();

            koneksi.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Tampil Tabel: " + ex.getMessage());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan: " + ex.getMessage());
        }
    }

    private void penomoran_otomatis() {
        int no_kode_rawat_inap = 0;
        String temp_kode_rawat_inap = "";
        Statement stt = null;
        ResultSet res = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
            Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost/db_rsprabu", "root", "");

            stt = koneksi.createStatement();
            String sql = "SELECT kd_inap FROM rawat_inap ORDER BY kd_inap DESC LIMIT 1";

            res = stt.executeQuery(sql);
            if (res.next()) {
                temp_kode_rawat_inap = res.getString(1);
                String nomor_blkg = temp_kode_rawat_inap.substring(3);
                no_kode_rawat_inap = Integer.parseInt(nomor_blkg);
            }

            no_kode_rawat_inap++;
            String nilai = String.valueOf(no_kode_rawat_inap);

            if (nilai.length() == 1) {
                e_kdrawatinap.setText("RI00" + no_kode_rawat_inap);
            } else if (nilai.length() == 2) {
                e_kdrawatinap.setText("RI0" + no_kode_rawat_inap);
            } else if (nilai.length() == 3) {
                e_kdrawatinap.setText("RI" + no_kode_rawat_inap);
            }

            res.close();
            stt.close();
            koneksi.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Penomoran! " + ex.getMessage());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error! " + ex.getMessage());
        } finally {
            try {
                if (res != null) {
                    res.close();
                }
                if (stt != null) {
                    stt.close();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Terjadi Error Menutup Sumber Daya! " + ex.getMessage());
            }
        }
    }

    private void aktif(boolean x) {

        e_kdpasien.setEditable(x);
        e_kdruangan.setEditable(x);
        e_namapasien.setEditable(!x);
        e_kddokter.setEditable(!x);
        e_namaruangan.setEditable(!x);
        e_kdrawatinap.requestFocus();
        e_tanggalmasuk.setEnabled(true);
        e_tanggalkeluar.setEnabled(false);
    }

    private void aktif2(boolean x) {

        e_kdpasien.setEditable(x);
        e_kdruangan.setEditable(x);
        e_namapasien.setEditable(!x);
        e_kddokter.setEditable(!x);
        e_namaruangan.setEditable(!x);
        e_kdrawatinap.requestFocus();
        e_tanggalmasuk.setEnabled(true);
        e_tanggalkeluar.setEnabled(true);
    }

    private void setTombol(boolean t) {
        tambah.setEnabled(t);

        simpan.setEnabled(!t);
        hapus.setEnabled(!t);
        edit.setEnabled(!t);
        batal.setEnabled(!t);
    }

    private void aturKolom() {
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        column = jTable1.getColumnModel().getColumn(0);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(1);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(2);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(3);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(4);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(5);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(6);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(7);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(8);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(9);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(10);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(11);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(12);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(13);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(14);
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(15);
        column.setPreferredWidth(125);

    }

    private void fungsi_pencarian() {
        Statement stt = null;
        ResultSet re = null;

        try {
            int data = jTable1.getRowCount();
            for (int i = 0; i < data; i++) {
                tabel.removeRow(0);
            }

            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
            Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost/db_rsprabu", "root", "");

            stt = koneksi.createStatement();
            String sql = "SELECT * FROM rawat_inap WHERE kd_inap LIKE '%" + pencarian.getText() + "%'"
                    + " OR kd_pasien LIKE '%" + pencarian.getText() + "%'"
                    + " OR nama_dokter LIKE '%" + pencarian.getText() + "%'"
                    + " OR nama_pasien LIKE '%" + pencarian.getText() + "%'"
                    + " OR kd_ruangan LIKE '%" + pencarian.getText() + "%'"
                    + " OR nama_ruangan LIKE '%" + pencarian.getText() + "%'"
                    + " ORDER BY kd_inap";

            re = stt.executeQuery(sql);
            while (re.next()) {
                String[] tabel_master = {
                    re.getString(1), re.getString(2), re.getString(3), re.getString(4),
                    re.getString(5), re.getString(6), re.getString(7), re.getString(8),
                    re.getString(9), re.getString(10), re.getString(11)
                };
                tabel.addRow(tabel_master);
            }

            if (jTable1.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Data Tidak Ditemukan!");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Fungsi Pencarian! " + ex.getMessage());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan! " + ex.getMessage());
        } finally {
            try {
                if (re != null) {
                    re.close();
                }
                if (stt != null) {
                    stt.close();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Menutup Sumber Daya! " + ex.getMessage());
            }
        }
    }
}
